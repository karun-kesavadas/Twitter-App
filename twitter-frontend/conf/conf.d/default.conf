server {
	listen 80;
	#all routes to be resolved
	gzip on;
    gzip_types text/html text/css application/javascript;

    root /var/www/;
    index index.html;

	# location ~* ^/notes/(.*) {
	# 	rewrite ^/notes/(.*) /api/todolist/$1 break ;
	# 	proxy_pass http://todo-middleware:5000;
	# }

	location /api/auth/ {
		# rewrite ^/notes /api/todolist break ;
		proxy_pass http://twitter-backend:8080/api/auth/;
	}

	location /api/tweet {
		# rewrite ^/gettodo /api/todolist break ;			
		proxy_pass http://twitter-middleware:5000/api/tweet ;
	}

	location /api/user {
		# rewrite ^/gettodo /api/todolist break ;			
		proxy_pass http://twitter-middleware:5000/api/user ;
	}

	location / {
		root /usr/share/nginx/html;
		index index.html index.htm;
		try_files $uri $uri/ /index.html;
		expires -1; # Set it to different value depending on your standard requirements
	}
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}

    # Force all paths to load either itself (js files) or go through index.html.
    location /index.html {
        try_files $uri /index.html;

        add_header Cache-Control "no-store, no-cache, must-revalidate";    
    }

    location / {
        try_files $uri /index.html;

        expires 1y;
        add_header Cache-Control "public";
    }
}